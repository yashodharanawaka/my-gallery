name: CI/CD

on:
  push:
    branches:
      - release

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build

  tag:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate Tag
        run: |
          TAG_NAME="build-$(date +%Y%m%d%H%M%S)"
          echo "Setting TAG_NAME to $TAG_NAME"
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          tag_name: "${{ env.TAG_NAME }}"
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build

      - name: Deploy to AWS S3
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Sync to S3 Bucket
        run: aws s3 sync $GITHUB_WORKSPACE/build/ s3://my-gallery-s3-bucket --delete

  invalidate-cache:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - name: CloudFront Cache Invalidation
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region your-region
          aws configure set default.output json
          aws cloudfront create-invalidation --distribution-id E3QX6D3AGSRMWB --paths "/*"
        env:
          AWS_DEFAULT_REGION: us-east-1
          AWS_DEFAULT_OUTPUT: json
