name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

  build:
    runs-on: ubuntu-latest
    needs: checkout

    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build

  tag:
    runs-on: ubuntu-latest
    needs:
      - checkout
      - build

    steps:
      - name: Get the working directory
        run: pwd
      - name: Get the latest commit hash
        run: |
          COMMIT_HASH=$(git rev-parse HEAD)
          echo "::set-output name=commit_hash::$COMMIT_HASH"

      - name: Tag the build
        run: |
          COMMIT_HASH=$(echo ${{ needs.build.outputs.commit_hash }})
          echo "Tagging commit $COMMIT_HASH"
          curl -X POST \
               -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/${{ github.repository }}/git/refs" \
               -d '{
               "ref": "refs/tags/build-${{ github.run_number }}",
               "sha": "'"$COMMIT_HASH"'"
               }'
          git push origin build-${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build

      - name: Deploy to AWS S3
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Sync to S3 Bucket
        run: aws s3 sync $GITHUB_WORKSPACE/build/ s3://my-gallery-s3-bucket --delete
